{"version":3,"sources":["wizmetria_web/views/error.cljs"],"mappings":";AAGA;;;0CAAA,kDAAAA,5FAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;oBAAA,AAAAE,4CAAAF,eAAA,3EAEWI;cAFX,AAAAF,4CAAAF,eAAA,rEAEyBK;eAFzB,AAAAH,4CAAAF,eAAA,tEAEiCM;iBAFjC,AAAAJ,4CAAAF,eAAA,xEAE0CO;AAF1C,AAAA,0FAAA,gNAAA,2CAAA,qDAAA,gBAAA,mFAAA,wFAAA,mFAAA,0FAAA,mFAAA,sHAAA,2CAAA,2DAAA,oBAAA,mFAAA,qDAAA,2CAAA,gEAAA,UAAA,+CAAA,oHAAA,8DAAA,0CAAA,mFAAA,mDAAA,mFAAA,kFAAA,gBAAA,mFAAA,sVAAA,mFAAA,hWAcsBH,sBACjB,2BAAA,AAAA,mFAAA,mHAAA,/MAAMC,+LAC0BA,6OAEjC,4BAAA,AAAA,mFAAA,gNAAA,2CAAA,8EAAA,oBAAA,1bAAMC,qZAEQA,2CAEd,8BAAA,AAAA,mFAAA,oNAAA,2CAAA,gFAAA,kBAAA,hcAAMC,2ZAEQA;;AAGlB;;;6CAAA,7CAAMC;AAAN,AAGE,uBAAA,AAAAC,nBAAMC,mCAAkB,sDAAA,mFAAA,zIAACC;AAAzB,AACE,GAAM,6CAAA,7CAACC,oGAAS,AAAA,wFAASF;AAAzB,AAAA,kIAAA,2CAAA,nFACGP,0JACgB,iBAAAU,mBAAI,AAAA,qGAAgBH;AAApB,AAAA,oBAAAG;AAAAA;;AAAA;;KAFnB,sKAAA,6DAAA,xKAGa,AAAA,yFAAUH;AAHvB,AAIe,IAAAI,qBAAgB,AAAA,4FAAWJ;AAA3B,AAAA,oBAAAI;AAAA,AAAA,WAAAA,PAAWC;AAAX,AACC,8BAAA,mFAAA,1GAACC,8KAA2BD;;AAD7B;;GAJf,+DAAA;AAAA,AAMiB,8BAAA,mFAAA,1GAACC;;;AANlB;;;AAQJ;;;yCAAA,zCAAMC,0FAEHC;AAFH,AAAA,0FAAA,wGAIGA","names":["p__12854","map__12855","cljs.core/--destructure-map","cljs.core.get","wizmetria-web.views.error/error-message","error-message","details","retry-fn","dismiss-fn","wizmetria-web.views.error/processing-error","cljs.core/deref","processing-state","re_frame.core.subscribe","cljs.core._EQ_","or__5002__auto__","temp__5804__auto__","file","re-frame.core/dispatch","wizmetria-web.views.error/inline-error","message"],"sourcesContent":["(ns wizmetria-web.views.error\r\n  (:require [re-frame.core :as rf]))\r\n\r\n(defn error-message \r\n  \"Display an error message with recovery options\"\r\n  [{:keys [error-message details retry-fn dismiss-fn]}]\r\n  [:div.bg-red-900.border-l-4.border-red-500.text-white.p-4.mb-6.rounded-lg.shadow-lg\r\n   {:role \"alert\"}\r\n   [:div.flex.items-center\r\n    [:div.flex-shrink-0.mr-2\r\n     [:svg.h-5.w-5.fill-current.text-red-300\r\n      {:viewBox \"0 0 20 20\"}\r\n      [:path {:fill-rule \"evenodd\"\r\n              :d \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\r\n              :clip-rule \"evenodd\"}]]]\r\n    [:div\r\n     [:p.font-bold.text-lg \"Error\"]\r\n     [:p.text-red-200 error-message]\r\n     (when details\r\n       [:p.text-red-300.text-sm.mt-1 details])]]\r\n   [:div.mt-3.flex.justify-end.space-x-2\r\n    (when retry-fn\r\n      [:button.bg-red-600.hover:bg-red-700.text-white.font-bold.py-1.px-3.rounded.text-sm\r\n       {:on-click retry-fn}\r\n       \"Try Again\"])\r\n    (when dismiss-fn\r\n      [:button.bg-gray-700.hover:bg-gray-800.text-white.font-bold.py-1.px-3.rounded.text-sm\r\n       {:on-click dismiss-fn}\r\n       \"Dismiss\"])]])\r\n\r\n(defn processing-error\r\n  \"Error component specifically for processing errors with retry capability\"\r\n  []\r\n  (let [processing-state @(rf/subscribe [:processing-state])]\r\n    (when (= :error (:status processing-state))\r\n      [error-message\r\n       {:error-message (or (:error-message processing-state) \"An unknown error occurred during processing\")\r\n        :details (:details processing-state)\r\n        :retry-fn #(when-let [file (:file-obj processing-state)]\r\n                    (rf/dispatch [:process-file file]))\r\n        :dismiss-fn #(rf/dispatch [:clear-processing-error])}])))\r\n\r\n(defn inline-error\r\n  \"A smaller inline error display for form fields\"\r\n  [message]\r\n  [:div.text-red-500.text-sm.mt-1\r\n   message]) "]}