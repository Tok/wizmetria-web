{"version":3,"sources":["wizmetria_web/views/analysis.cljs"],"mappings":"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","names":["wizmetria-web.views.analysis/file-upload-button","e","temp__5804__auto__","file","re-frame.core/dispatch","wizmetria-web.i18n/t","wizmetria-web.views.analysis/processing-progress-indicator","processing-state","G__12613","cljs.core/Keyword","name","or__5002__auto__","total","progress","x__5087__auto__","y__5088__auto__","cljs.core/deref","stats","re_frame.core.subscribe","cljs.core.get_in","wizmetria-web.views.analysis/text-analysis","wordlist-stats","cljs.core._EQ_","wizmetria-web.views.error/processing-error","G__12615","fexpr__12614","and__5000__auto__"],"sourcesContent":["(ns wizmetria-web.views.analysis\r\n  (:require [re-frame.core :as rf]\r\n            [wizmetria-web.i18n :refer [t]]\r\n            [wizmetria-web.views.error :as error]))\r\n\r\n;; -- File upload button component --\r\n(defn file-upload-button []\r\n  [:label.bg-purple-700.text-white.px-4.py-2.rounded-lg.hover:bg-purple-600.focus:outline-none.focus:ring-2.focus:ring-purple-500.transition-colors.duration-200.font-medium.cursor-pointer.text-sm\r\n   [:input.hidden\r\n    {:type \"file\"\r\n     :accept \".txt\"\r\n     :on-change (fn [e]\r\n                  (when-let [file (-> e .-target .-files (aget 0))]\r\n                    (rf/dispatch [:process-file file])))}]\r\n   (t :upload-button)])\r\n\r\n;; -- Processing progress indicator component --\r\n(defn processing-progress-indicator [processing-state]\r\n  (when processing-state\r\n    [:div.mt-3\r\n     (case (:status processing-state)\r\n       :reading\r\n       [:div\r\n        [:div.text-sm.text-gray-400.mb-1 \r\n         (str (t :reading-status) \r\n              (when-let [name (:file-name processing-state)] (str \": \" name))\r\n              (when (> (:progress processing-state) 0)\r\n                (str \" (\" (.toFixed (:progress processing-state) 1) \"%)\")))\r\n         ;; Add a small spinner for better visual feedback\r\n         [:span.ml-2.inline-block\r\n          [:svg.animate-spin.h-3.w-3.text-indigo-500 \r\n           {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\"}\r\n           [:circle.opacity-25 {:cx \"12\" :cy \"12\" :r \"10\" :stroke \"currentColor\" :stroke-width \"4\"}]\r\n           [:path.opacity-75 {:fill \"currentColor\" \r\n                           :d \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}]]]]\r\n        [:div.w-full.bg-gray-700.rounded-full.h-2.overflow-hidden\r\n         [:div.bg-indigo-500.h-2.transition-all.duration-300.ease-out\r\n          {:style {:width (str (:progress processing-state) \"%\")}}]]]\r\n       \r\n       :processing\r\n       [:div\r\n        [:div.text-sm.text-gray-400.mb-1.flex.justify-between\r\n         [:span\r\n          (str (t :processing-text-status) \": \" \r\n               (or (:processed-chunks processing-state) \"0\") \r\n               \"/\" \r\n               ;; Handle case where total-chunks might be a string like \"calculating...\"\r\n               (let [total (:total-chunks processing-state)]\r\n                 (if (string? total) \r\n                   total \r\n                   (or total \"?\")))\r\n               \" chunks\")]\r\n         [:span\r\n          ;; Add percentage display with fallback and ensure it's visible\r\n          (let [progress (or (:progress processing-state) 0.5)]\r\n            (str (.toFixed (max 0.5 progress) 1) \"%\"))]]\r\n        [:div.w-full.bg-gray-700.rounded-full.h-2.overflow-hidden.relative\r\n         ;; Add subtle animation for active progress\r\n         [:div.absolute.inset-0.opacity-30.bg-indigo-800\r\n          {:class (when (< (or (:progress processing-state) 0) 100) \"animate-pulse\")}]\r\n         [:div.bg-indigo-500.h-2.transition-all.duration-300.ease-out.relative\r\n          {:style {:width (str (max 0.5 (or (:progress processing-state) 0.5)) \"%\")}}]]]\r\n       \r\n       :finding-symmetry\r\n       [:div\r\n        [:div.text-sm.text-gray-400.mb-1.flex.justify-between\r\n         [:span (str (t :finding-symmetry) \" \" (:word-count processing-state) \" words\")]\r\n         ;; Add a small spinner for better visual feedback\r\n         [:span.ml-2.inline-block\r\n          [:svg.animate-spin.h-3.w-3.text-indigo-500 \r\n           {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\"}\r\n           [:circle.opacity-25 {:cx \"12\" :cy \"12\" :r \"10\" :stroke \"currentColor\" :stroke-width \"4\"}]\r\n           [:path.opacity-75 {:fill \"currentColor\" \r\n                           :d \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}]]]]\r\n        [:div.w-full.bg-gray-700.rounded-full.h-2.overflow-hidden\r\n         [:div.bg-indigo-500.h-2.transition-all.duration-300.ease-out\r\n          {:style {:width (str (:progress processing-state) \"%\")}}]]]\r\n       \r\n       :mirror-symmetry\r\n       [:div\r\n        [:div.text-sm.text-gray-400.mb-1.flex.justify-between\r\n         [:span (str (t :finding-symmetry) \" \" (t :mirror-symmetry))]\r\n         [:span.ml-2.inline-block\r\n          [:svg.animate-spin.h-3.w-3.text-indigo-500 \r\n           {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\"}\r\n           [:circle.opacity-25 {:cx \"12\" :cy \"12\" :r \"10\" :stroke \"currentColor\" :stroke-width \"4\"}]\r\n           [:path.opacity-75 {:fill \"currentColor\" \r\n                           :d \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}]]]]\r\n        [:div.w-full.bg-gray-700.rounded-full.h-2.overflow-hidden\r\n         [:div.bg-indigo-500.h-2.transition-all.duration-300.ease-out\r\n          {:style {:width (str (:progress processing-state) \"%\")}}]]]\r\n       \r\n       :rotational-symmetry\r\n       [:div\r\n        [:div.text-sm.text-gray-400.mb-1.flex.justify-between\r\n         [:span (str (t :finding-symmetry) \" \" (t :rotation-symmetry))]\r\n         [:span.ml-2.inline-block\r\n          [:svg.animate-spin.h-3.w-3.text-indigo-500 \r\n           {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\"}\r\n           [:circle.opacity-25 {:cx \"12\" :cy \"12\" :r \"10\" :stroke \"currentColor\" :stroke-width \"4\"}]\r\n           [:path.opacity-75 {:fill \"currentColor\" \r\n                           :d \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}]]]]\r\n        [:div.w-full.bg-gray-700.rounded-full.h-2.overflow-hidden\r\n         [:div.bg-indigo-500.h-2.transition-all.duration-300.ease-out\r\n          {:style {:width (str (:progress processing-state) \"%\")}}]]]\r\n       \r\n       :done\r\n       [:div.text-sm.text-gray-400.mb-1 (str (t :processing-status) \"...\")]\r\n       \r\n       :error\r\n       [:div.text-sm.text-red-400.mb-1 \r\n        (str (:error-message processing-state) \": \" (:details processing-state))]\r\n       \r\n       :complete\r\n       (let [stats @(rf/subscribe [:wordlist-stats])]\r\n         (when stats\r\n           [:div.text-sm.text-green-400.mb-1 \r\n            (str (t :completed-status) \": \" \r\n                 (+ (get-in stats [:mirror :count]) \r\n                    (get-in stats [:rotation :count])) \r\n                 \" \" (t :stats-symmetric-words))]))\r\n       \r\n       nil)]))\r\n\r\n;; -- Text analysis component --\r\n(defn text-analysis []\r\n  (let [processing-state @(rf/subscribe [:processing-state])\r\n        wordlist-stats @(rf/subscribe [:wordlist-stats])]\r\n    [:div.bg-gray-800.p-4.rounded-lg.shadow-lg.border.border-purple-700.text-gray-200.mt-8\r\n     [:div.flex.justify-between.items-center\r\n      [:h3.text-xl.text-purple-300.font-semibold (t :text-analysis-title)]\r\n      [:div.flex.items-center\r\n       (when-not (or (nil? processing-state) (= (:status processing-state) :complete))\r\n         [:div.flex.items-center.mr-3\r\n          [:svg.animate-spin.-ml-1.mr-2.h-4.w-4.text-purple-500 \r\n           {:xmlns \"http://www.w3.org/2000/svg\" :fill \"none\" :viewBox \"0 0 24 24\"}\r\n           [:circle.opacity-25 {:cx \"12\" :cy \"12\" :r \"10\" :stroke \"currentColor\" :stroke-width \"4\"}]\r\n           [:path.opacity-75 {:fill \"currentColor\" \r\n                           :d \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}]]])\r\n       [file-upload-button]]]\r\n     \r\n     [:p.text-sm.text-gray-300.mt-2.mb-4 (t :text-analysis-description)]\r\n     \r\n     ;; Show error component if there's an error\r\n     [error/processing-error]\r\n     \r\n     ;; Progress indicator\r\n     (cond\r\n       ;; Currently processing - show progress\r\n       (#{:reading :processing :finding-symmetry \r\n          :mirror-symmetry :rotational-symmetry :calculating-stats}\r\n        (:status processing-state))\r\n       [processing-progress-indicator processing-state]\r\n       \r\n       ;; Processing complete with stats - show message\r\n       (and (= :complete (:status processing-state)) wordlist-stats)\r\n       [:div.text-purple-300.text-lg.mt-4\r\n        (str \"Analyzed \" (:total-words wordlist-stats) \" words from your file\")]\r\n       \r\n       ;; Done with processing - show message\r\n       (= :done (:status processing-state))\r\n       [:div.text-green-300.text-lg.mt-4\r\n        \"Processing complete! Results displayed below.\"]\r\n       \r\n       ;; No processing state - don't show anything extra\r\n       :else nil)])) "]}